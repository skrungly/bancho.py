name: osu

services:
  ## shared services
  mysql:
    image: mysql:latest
    environment:
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASS}
      MYSQL_DATABASE: ${DB_NAME}
      NYSQL_HOST: ${DB_HOST}
      MYSQL_PORT: ${DB_PORT}
      MYSQL_RANDOM_ROOT_PASSWORD: "true"
    volumes:
      - ./migrations/base.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - db-data:/var/lib/mysql
    healthcheck:
      test: "/usr/bin/mysql --user=$$MYSQL_USER --password=$$MYSQL_PASSWORD --execute \"SHOW DATABASES;\""
      interval: 2s
      timeout: 20s
      retries: 10

  redis:
    image: bitnami/redis:latest
    user: root
    volumes:
      - redis-data:/bitnami/redis/data
    environment:
      ALLOW_EMPTY_PASSWORD: "yes"
      REDIS_PASSWORD: ${REDIS_PASS}

  ## application services
  bancho:
    build: .
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
    tty: true
    init: true
    volumes:
      - .:/srv/root
      - bancho-data:/srv/root/.data
    environment:
      APP_HOST: ${APP_HOST}
      APP_PORT: ${APP_PORT}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_NAME: ${DB_NAME}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      REDIS_USER: ${REDIS_USER}
      REDIS_PASS: ${REDIS_PASS}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_DB: ${REDIS_DB}
      OSU_API_KEY: ${OSU_API_KEY}
      MIRROR_SEARCH_ENDPOINT: ${MIRROR_SEARCH_ENDPOINT}
      MIRROR_DOWNLOAD_ENDPOINT: ${MIRROR_DOWNLOAD_ENDPOINT}
      DOMAIN: ${DOMAIN}
      COMMAND_PREFIX: ${COMMAND_PREFIX}
      SEASONAL_BGS: ${SEASONAL_BGS}
      MENU_ICON_URL: ${MENU_ICON_URL}
      MENU_ONCLICK_URL: ${MENU_ONCLICK_URL}
      DATADOG_API_KEY: ${DATADOG_API_KEY}
      DATADOG_APP_KEY: ${DATADOG_APP_KEY}
      DEBUG: ${DEBUG}
      REDIRECT_OSU_URLS: ${REDIRECT_OSU_URLS}
      PP_CACHED_ACCS: ${PP_CACHED_ACCS}
      DISALLOWED_NAMES: ${DISALLOWED_NAMES}
      DISALLOWED_PASSWORDS: ${DISALLOWED_PASSWORDS}
      DISALLOW_OLD_CLIENTS: ${DISALLOW_OLD_CLIENTS}
      DISALLOW_INGAME_REGISTRATION: ${DISALLOW_INGAME_REGISTRATION}
      DISCORD_AUDIT_LOG_WEBHOOK: ${DISCORD_AUDIT_LOG_WEBHOOK}
      AUTOMATICALLY_REPORT_PROBLEMS: ${AUTOMATICALLY_REPORT_PROBLEMS}
      SSL_CERT_PATH: ${SSL_CERT_PATH}
      SSL_KEY_PATH: ${SSL_KEY_PATH}
      DEVELOPER_MODE: ${DEVELOPER_MODE}
    healthcheck:
      test: "curl -f http://c.${DOMAIN} --resolve 'c.${DOMAIN}:${APP_PORT}:127.0.0.1'"
      interval: 10s
      timeout: 4s
      retries: 10
    restart: unless-stopped

  nginx:
    image: nginx:stable-alpine
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - bancho-data:/.data:ro
    restart: unless-stopped

  cloudflared:
    image: cloudflare/cloudflared:latest
    command: tunnel run
    restart: unless-stopped
    environment:
      TUNNEL_TOKEN: ${TUNNEL_TOKEN}

volumes:
  bancho-data:
    name: osu-bancho
  db-data:
    name: osu-db
  redis-data:
    name: osu-redis

networks:
  default:
    name: osu
